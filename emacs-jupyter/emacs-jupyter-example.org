#+TITLE: Emacs Jupyter notebook

$\LaTeX$ code is supported inline, as well as in code blocks.

\begin{equation}
x = \sqrt{b}
\end{equation}

If $a^2=b$ and \(b=2\), then the solution must be either $$a = +\sqrt{2}$$ or \[a = -\sqrt{2}\].

Press "~C-'~" within a block to edit it in a new buffer.

#+begin_export latex
\begin{equation}
  x + y
\end{equation}
#+end_export

The following is synchronous (Emacs waits for evaluation to finish before it accepts user input again, can be interrupted midway using "~C-g~").

#+begin_src jupyter-python :session py
  x = 'foo'
  y = 'bar'
  x + ' ' + y
#+end_src

#+RESULTS:
: foo bar

The following is asynchronous (Emacs /does not/ wait for evaluation to finish before accepting further user input).

#+begin_src jupyter-python :session py :async yes
  x + y
#+end_src

#+RESULTS:
: foobar

~stdout~ is only printed to results if ~:results output~ is specified in the header.

#+begin_src jupyter-python :session py :async yes :results output
  %matplotlib inline
  import matplotlib.pyplot as plt
  import numpy as np
  print('Required modules loaded.')
#+end_src

#+RESULTS:
: Required modules loaded.

Example of plotting using the Jupyter kernel.

#+begin_src jupyter-python :session py :async yes :file emacs-jupyter-example-plot.png
  plt.plot(np.random.rand(10), np.random.rand(10))
#+end_src

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x120af7128> |
[[file:emacs-jupyter-example-plot.png]]
:END:
